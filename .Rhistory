c(max(q[,4]), q[max(which(q[,4]>1)),1])
})
params <- lapply(seq(1,6,0.1),
function(BP) c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=BP, Kp=300, a=0.004))
library(parallel)
o <- mclapply(params,
function(p)
sapply(1:200, function(i) {
q <- lsoda(y=c(T1=1200-Th2[i],T2=Th2[i],P=P[i]), times=seq(0,50,0.1), within_host_model, p)
c(max(q[,4]), q[max(which(q[,4]>1)),1])
}) %>% t,
mc.cores=10)
o
n = o[[1]]
n
n[,2]
n[,2]>49.9
sum(n[,2]>49.9)
sum(n[,2]>49.9)/200
## Compute probability of chronic for every BP value
unlist(lapply(o, function(n) sum(n[,2]>49.9)/200))
## Compute probability of chronic for every BP value
prob <- unlist(lapply(o, function(n) sum(n[,2]>49.9)/200))
which(n[,2]<49.9)
n[which(n[,2]<49.9),1]
mean(n[which(n[,2]<49.9),1])
## Compute probability of chronic for every BP value
prob <- sapply(o, function(n) sum(n[,2]>49.9)/200)
prob
lapply(o, function(n) mean(n[which(n[,2]<49.9),1]))
## Compute peak and duration for acute infections
peak <- sapply(o, function(n) mean(n[which(n[,2]<49.9),1]))
peak
prob <- sapply(o, function(n) sum(n[,2]>49.9)/200)
## Compute peak and duration for acute infections
peak <- sapply(o, function(n) mean(n[which(n[,2]<49.9),1]))
duration <- sapply(o, function(n) mean(n[which(n[,2]<49.9),2]))
duration
1:length(o)
## Compute peak and duration for acute infections
peak <- sapply(1:length(o), function(i) data.frame(n[which(o[[i]][,2]<49.9),1],seq(1,6,0.1)[i]))
peak
i = 1
n[which(o[[i]][,2]<49.9),1]
seq(1,6,0.1)[i]
data.frame(peak=n[which(o[[i]][,2]<49.9),1],bp=seq(1,6,0.1)[i]))
data.frame(peak=n[which(o[[i]][,2]<49.9),1],bp=seq(1,6,0.1)[i])
## Compute peak and duration for acute infections
lapply(1:length(o),
function(i)
data.frame(peak=n[which(o[[i]][,2]<49.9),1],bp=seq(1,6,0.1)[i])) %>%
do.call(., "rbind.data.frame")
## Compute peak and duration for acute infections
lapply(1:length(o),
function(i)
data.frame(peak=n[which(o[[i]][,2]<49.9),1],bp=seq(1,6,0.1)[i])) %>%
do.call("rbind.data.frame",.) -> peak
peak
peak$bp <- as.factor(peak$bp)
peak$bp
plot(seq(1,6,0.1), prob, pch=21, bg=1, cex=1.5)
plot(seq(1,6,0.1), prob, pch=21, bg=1)
plot(seq(1,6,0.1), prob, pch=21, bg=1)
plot(seq(1,6,0.1), prob, type='l')
plot(seq(1,6,0.1), prob, type='l')
boxplot(peak~bp, peak)
boxplot(peak~bp, peak)
subset(peak, bp=="4")
subset(peak, bp=="4") %>% nrow
subset(duration, bp=="4") %>% nrow
lapply(1:length(o),
function(i)
data.frame(duration=n[which(o[[i]][,2]<49.9),2],bp=seq(1,6,0.1)[i])) %>%
do.call("rbind.data.frame",.) -> duration
duration
subset(duration, bp=="4")
o
do.call("rbind.data.frame",o)
summ <- do.call("rbind.data.frame",o)
summ$bp <- rep(seq(1,6,0.1), each=200)
head(summ)
summ2 <- subset(summ, time < 50)
nrow(summ2)
max(summ2[,2])
colnames(summ2)[1:2] <- c("peak","duration")
plot(seq(1,6,0.1), prob, type='l')
boxplot(peak~bp, summ2)
boxplot(peak~bp, summ2)
boxplot(duration~bp, summ2)
## Simulate
Th2 <- runif(500, 400, 1000)
P <- rpois(500,round(runif(200,10,30)))
params <- lapply(seq(1,6,0.025),
function(BP) c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=BP, Kp=300, a=0.004))
library(parallel)
o <- mclapply(params,
function(p)
sapply(1:length(Th2), function(i) {
q <- lsoda(y=c(T1=1200-Th2[i],T2=Th2[i],P=P[i]), times=seq(0,100,0.1), within_host_model, p)
c(max(q[,4]), q[max(which(q[,4]>2)),1])
}) %>% t,
mc.cores=10)
saveRDS(o, file="Within-host-metrics-across-bp-values.RDS")
o
## Compute peak and duration for all acute infections
summ <- do.call("rbind.data.frame",o)
dim(summ)
summ$bp <- rep(seq(1,6,0.025), each=500)
summ$bp <- as.factor(summ$bp)
summ2 <- subset(summ, time < 100)
colnames(summ2)[1:2] <- c("peak","duration")
max(summ2$duration)
order(unique(summ2$duration))
sort(unique(summ2$duration))
sort(summ2$duration)
sort(summ2$duration) %>% tail
sum(summ2$duration==99.9)
sum(summ2$duration==99.8)
sum(summ2$duration==99.7)
sum(summ2$duration==99.6)
sum(summ2$duration==99.5)
sum(summ2$duration==10)
sum(summ2$duration==10.1)
sum(summ2$duration==10.2)
sum(summ2$duration==10.3)
sum(summ2$duration==10.4)
sum(summ2$duration==10.5)
## Compute probability of chronic for every BP value
prob <- sapply(o, function(n) sum(n[,2]>99.9)/500)
prob
plot(seq(1,6,0.025), prob, type='l')
par(mfrow=c(1,3))
plot(seq(1,6,0.1), prob, type='l')
plot(seq(1,6,0.025), prob, type='l')
boxplot(peak~bp, summ2)
boxplot(duration~bp, summ2)
par(mfrow=c(1,1))
boxplot(peak~bp, summ2)
boxplot(peak~bp, summ2)
library(ggplot2)
ggplot(summ2, aes(x=bp, y=peak)) + stat_summary()
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak))
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak))
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak)) %>% ggplot(aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill=gray(70)) + geom_line(aes(y=ymean))
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak)) %>% ggplot(aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean))
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak)) %>% ggplot(.) + geom_line(aes(x=bp, y=ymean))
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak)) %>% ggplot(., aes(x=bp, y=ymean)) + geom_line()
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak)) -> summ3
summ3
ggplot(summ3, aes(x=bp, y=ymean)) + geom_line()
plot(summ3$bp, summ3$ymean, type='l')
ggplot(as.data.frame(summ3), aes(x=bp, y=ymean)) + geom_line()
with(as.data.frame(summ3), plot(x=bp, y=ymean, type='l'))
as.data.frame(summ3)
with(as.data.frame(summ3), plot(x=bp, y=ymean, type='l'))
summ3$bp
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
summ2 %>% group_by(bp) %>% summarize(ymin=min(peak), ymax=max(peak), ymean=mean(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean))
summ2 %>% group_by(bp) %>% summarize(ymin=mean(peak)-2*sd(peak), ymax=mean(peak)+2*sd(peak), ymean=mean(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean))
0.025*500
0.975*500
summ2 %>% group_by(bp) %>% summarize(ymin=sort(peak)[12], ymax=sort(peak)[488], ymean=mean(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean))
summ3
summ2 %>% group_by(bp) %>% summarize(ymin=sort(peak)[12], ymax=sort(peak)[488], ymean=mean(peak))
summ2 %>% group_by(bp) %>% summarize(ymin=sort(peak)[12], ymax=length(peak), ymean=mean(peak)) %>% as.data.frame -> summ3
summ3
0.025*length(peak)a
summ2 %>% group_by(bp) %>% summarize(ymin=sort(peak)[round(0.025*length(peak))], ymax=sort(peak)[round(0.975*length(peak))], ymean=mean(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
summ3
ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean))
library(patchwork)
install.packages('patchwork')
ggplot(aes(x=seq(1,6,0.025), y=prob)) + geom_line()
ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line()
ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + theme_bw()
ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Peak load") + theme_bw()
summ2 %>% group_by(bp) %>% summarize(ymin=sort(duration)[round(0.025*length(duration))], ymax=sort(duration)[round(0.975*length(duration))], ymean=mean(duration)) %>% as.data.frame -> summ4
summ4$bp <- as.numeric(as.character(summ4$bp))
ggplot(summ4, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Infection duration") + theme_bw()
## Compute probability of chronic for every BP value
prob <- sapply(o, function(n) sum(n[,2]>99.9)/500)
## Plot
p1 <- ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + theme_bw()
## Compute peak and duration for all acute infections
summ <- do.call("rbind.data.frame",o)
summ$bp <- rep(seq(1,6,0.025), each=500)
summ$bp <- as.factor(summ$bp)
summ2 <- subset(summ, time < 100)
colnames(summ2)[1:2] <- c("peak","duration")
summ2 %>% group_by(bp) %>% summarize(ymin=sort(peak)[round(0.25*length(peak))], ymax=sort(peak)[round(0.75*length(peak))], ymean=mean(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
p2 <- ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Peak load") + theme_bw()
summ2 %>% group_by(bp) %>% summarize(ymin=sort(duration)[round(0.25*length(duration))], ymax=sort(duration)[round(0.75*length(duration))], ymean=mean(duration)) %>% as.data.frame -> summ4
summ4$bp <- as.numeric(as.character(summ4$bp))
p3 <- ggplot(summ4, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Infection duration") + theme_bw()
p1+p2+p3
library(patchwork)
p1+p2+p3
## Compute probability of chronic for every BP value
prob <- sapply(o, function(n) sum(n[,2]>99.9)/500)
## Plot
p1 <- ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + theme_bw()
## Compute peak and duration for all acute infections
summ <- do.call("rbind.data.frame",o)
summ$bp <- rep(seq(1,6,0.025), each=500)
summ$bp <- as.factor(summ$bp)
summ2 <- subset(summ, time < 100)
colnames(summ2)[1:2] <- c("peak","duration")
summ2 %>% group_by(bp) %>% summarize(ymin=sort(peak)[round(0.25*length(peak))], ymax=sort(peak)[round(0.75*length(peak))], ymean=median(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
p2 <- ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Peak load") + theme_bw()
summ2 %>% group_by(bp) %>% summarize(ymin=sort(duration)[round(0.25*length(duration))], ymax=sort(duration)[round(0.75*length(duration))], ymean=median(duration)) %>% as.data.frame -> summ4
summ4$bp <- as.numeric(as.character(summ4$bp))
p3 <- ggplot(summ4, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Infection duration") + theme_bw()
p1+p2+p3
p1 <- ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + vline(4, lty=2) + theme_bw()
ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + geom_vline(4, linetype=2) + theme_bw()
ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + geom_vline(xintercept=4, linetype=2) + theme_bw()
meanV
8*meanV/(meanV+1e-4)
## Plot
meanbp = 8*meanV/(meanV+1e-4)
ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + geom_vline(xintercept=4, linetype=2) + geom_vline(xintercept=meanbp, linetype=2, col=4) +  theme_bw()
## Compute probability of chronic for every BP value
prob <- sapply(o, function(n) sum(n[,2]>99.9)/500)
## Plot
meanbp = 8*meanV/(meanV+1e-4)
p1 <- ggplot(NULL, aes(x=seq(1,6,0.025), y=prob)) + geom_line() + xlab("Replication rate") + ylab("Chronic probability") + geom_vline(xintercept=4, linetype=2, col=2) + geom_vline(xintercept=meanbp, linetype=2, col=4) +  theme_bw()
## Compute peak and duration for all acute infections
summ <- do.call("rbind.data.frame",o)
summ$bp <- rep(seq(1,6,0.025), each=500)
summ$bp <- as.factor(summ$bp)
summ2 <- subset(summ, time < 100)
colnames(summ2)[1:2] <- c("peak","duration")
summ2 %>% group_by(bp) %>% summarize(ymin=sort(peak)[round(0.25*length(peak))], ymax=sort(peak)[round(0.75*length(peak))], ymean=median(peak)) %>% as.data.frame -> summ3
summ3$bp <- as.numeric(as.character(summ3$bp))
p2 <- ggplot(summ3, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Peak load") + geom_vline(xintercept=4, linetype=2, col=2) + geom_vline(xintercept=meanbp, linetype=2, col=4)+ theme_bw()
summ2 %>% group_by(bp) %>% summarize(ymin=sort(duration)[round(0.25*length(duration))], ymax=sort(duration)[round(0.75*length(duration))], ymean=median(duration)) %>% as.data.frame -> summ4
summ4$bp <- as.numeric(as.character(summ4$bp))
p3 <- ggplot(summ4, aes(x=bp)) + geom_ribbon(aes(ymin=ymin, ymax=ymax), fill="gray70") + geom_line(aes(y=ymean)) + xlab("Replication rate") + ylab("Infection duration") + geom_vline(xintercept=4, linetype=2, col=2) + geom_vline(xintercept=meanbp, linetype=2, col=4)+ theme_bw()
p1+p2+p3
out6 <- readRDS("Nested_model_variable_dose_variable_Th2_variable_outcome_3.RDS")
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,100))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out6[[i]][[2]][,c(1,3)], col=ifelse(out6[[i]][[2]][401,3]>0,1,2))
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "No. infected")
legend(x='topright',
paste("Prob. extinct", sum(unlist(lapply(out6, function(o) o[[2]][401,3]==0)))/50, sep=" "),
bty='n', text.col=2)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,100))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out5[[i]][[2]][,c(1,3)], col=ifelse(out5[[i]][[2]][401,3]>0,gray(0.8),'lightpink'))
mean.I <- sapply(which(unlist(lapply(out5, function(o) o[[2]][401,3]>0))), function(i) out5[[i]][[2]][,3]) %>% apply(., 1, mean)
lines(1:401, mean.I, lwd=2)
mean.prev <- sapply(which(unlist(lapply(out5, function(o) o[[2]][401,3]>0))), function(i) out5[[i]][[2]][,3]/apply(out5[[i]][[2]][,2:3],1,sum)) %>% apply(., 1, mean)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "No. infected")
legend(x='topright',
paste("Mean prevalence", round(mean(mean.prev[301:401]),2), sep=" "),
bty='n', text.col=1)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,100))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out6[[i]][[2]][,c(1,3)], col=ifelse(out6[[i]][[2]][401,3]>0,gray(0.8),'lightpink'))
mean.I <- sapply(which(unlist(lapply(out6, function(o) o[[2]][401,3]>0))), function(i) out6[[i]][[2]][,3]) %>% apply(., 1, mean)
lines(1:401, mean.I, lwd=2)
mean.prev <- sapply(which(unlist(lapply(out6, function(o) o[[2]][401,3]>0))), function(i) out6[[i]][[2]][,3]/apply(out6[[i]][[2]][,2:3],1,sum)) %>% apply(., 1, mean)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "No. infected")
legend(x='topright',
paste("Mean prevalence", round(mean(mean.prev[301:401]),2), sep=" "),
bty='n', text.col=1)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,2e-4))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out5[[i]][[2]][401,4] > 0) lines(out5[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out5[which(unlist(lapply(out5, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,2e-4))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out5, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,4e-4))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out5, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out5, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
sapply(out2, function(o) o[,6])
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
lapply(out6, function(o) max(o[,6]))
lapply(out6, function(o) max(o[[2]][,6]))
unlist(lapply(out6, function(o) max(o[[2]][,6])))
which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,c(1,6)], col=2)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,2e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,c(1,6)], col=2)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][101,6]))))]][[2]][,6], col=2)
max(o[[2]][201,6]))))]][[2]][,6], col=2)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][101,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][201,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][301,6]))))]][[2]][,6], col=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) min(o[[2]][,6]))))]][[2]][,6], col=4)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) min(o[[2]][101,6]))))]][[2]][,6], col=4)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) min(o[[2]][201,6]))))]][[2]][,6], col=4)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) min(o[[2]][301,6]))))]][[2]][,6], col=4)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][101,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][201,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][301,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.min(unlist(lapply(out6, function(o) min(o[[2]][,6]))))]][[2]][,6], col=4)
lines(1:401, out6[[which.min(unlist(lapply(out6, function(o) min(o[[2]][101,6]))))]][[2]][,6], col=4)
lines(1:401, out6[[which.min(unlist(lapply(out6, function(o) min(o[[2]][201,6]))))]][[2]][,6], col=4)
lines(1:401, out6[[which.min(unlist(lapply(out6, function(o) min(o[[2]][301,6]))))]][[2]][,6], col=4)
unlist(lapply(out6, function(o) min(o[[2]][,6]))
)
unlist(lapply(out6, function(o) min(o[[2]][,6])))
min(unlist(lapply(out6, function(o) min(o[[2]][,6]))))
min(unlist(lapply(out6, function(o) min(o[[2]][,6]))),na.rm=T)
which(unlist(lapply(out6, function(o) min(o[[2]][,6]))==min(unlist(lapply(out6, function(o) min(o[[2]][,6]))),na.rm=T)))
unlist(lapply(out6, function(o) min(o[[2]][,6]))[20]
)
unlist(lapply(out6, function(o) min(o[[2]][,6])))[20]
which(unlist(lapply(out6, function(o) min(o[[2]][,6]))==min(unlist(lapply(out6, function(o) min(o[[2]][,6]))),na.rm=T)))
out6[[which(unlist(lapply(out6, function(o) min(o[[2]][,6]))==min(unlist(lapply(out6, function(o) min(o[[2]][,6]))),na.rm=T)))]][[2]][,6]
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][101,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][201,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][301,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which(unlist(lapply(out6, function(o) min(o[[2]][,6]))==min(unlist(lapply(out6, function(o) min(o[[2]][,6]))),na.rm=T)))]][[2]][,6], col=4)
lines(1:401, out6[[which(unlist(lapply(out6, function(o) min(o[[2]][101,6]))==min(unlist(lapply(out6, function(o) min(o[[2]][101,6]))),na.rm=T)))]][[2]][,6], col=4)
unlist(lapply(out6, function(o) min(o[[2]][101,6])))
o[[7]][[2]]
out6[[7]][[2]]
lapply(out6, function(o) o[[2]][401,4] > 0)
unlist(lapply(out6, function(o) o[[2]][401,4] > 0))
which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))
inds = which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))
lapply(out6[inds], function(o) min(o[,6]))
lapply(out6[inds], function(o) min(o[[2]][,6]))
unlist(lapply(out6[inds], function(o) min(o[[2]][,6])))
which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][,6]))))
out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][,6]))))]]]
out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][,6]))))]]][[2]]
out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][,6]))))]]][[2]][,c(1,6)]
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][101,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][201,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][301,6]))))]][[2]][,6], col=2)
inds <- which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))
lines(out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][,6]))))]]][[2]][,c(1,6)], col=4)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][101,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][201,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][301,6]))))]][[2]][,6], col=2)
inds <- which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))
lines(out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][,6]))))]]][[2]][,c(1,6)], col=4)
lines(out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][101,6]))))]]][[2]][,c(1,6)], col=4)
lines(out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][201,6]))))]]][[2]][,c(1,6)], col=4)
lines(out6[[inds[which.min(unlist(lapply(out6[inds], function(o) min(o[[2]][301,6]))))]]][[2]][,c(1,6)], col=4)
lapply(out6[inds], function(o) mean(o[[2]][,6]))
unlist(lapply(out6[inds], function(o) mean(o[[2]][,6])))
order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))
order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))[1:4]
order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))[1:4]
inds[order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))[1:4]]
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][101,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][201,6]))))]][[2]][,6], col=2)
lines(1:401, out6[[which.max(unlist(lapply(out6, function(o) max(o[[2]][301,6]))))]][[2]][,6], col=2)
inds <- which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))
for (i in inds[order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))[1:4]]) lines(out6[[i]][[2]][,c(1,6)], col=4)
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,1e-3))
axis(1); axis(2); box('plot')
for (i in 1:50) {
if(out6[[i]][[2]][401,4] > 0) lines(out6[[i]][[2]][,c(1,6)], col=gray(0.7))
}
lines(1:401, sapply(out6[which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))], function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
inds <- which(unlist(lapply(out6, function(o) o[[2]][401,4] > 0)))
for (i in inds[rev(order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6])))))[1:4]])
lines(out6[[i]][[2]][,c(1,6)], col=2)
for (i in inds[order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))[1:4]])
lines(out6[[i]][[2]][,c(1,6)], col=4)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
inds[rev(order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6])))))[1:4]]
lapply(out6[inds[rev(order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6])))))[1:4]]], function(o) o[[2]][101,6])
lapply(out6[inds[rev(order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6])))))[1:4]]], function(o) o[[2]][101,6]) %>% unlist %>% mean
(lapply(out6[inds[rev(order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6])))))[1:4]]], function(o) o[[2]][101,6]) %>% unlist %>% mean)/(lapply(out6[inds[order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))[1:4]]], function(o) o[[2]][101,6]) %>% unlist %>% mean)
(lapply(out6[inds[order(unlist(lapply(out6[inds], function(o) mean(o[[2]][,6]))))[1:4]]], function(o) o[[2]][101,6]) %>% unlist %>% mean)
