with(as.data.frame(o1), lines(time, P))
plot.new()
plot.window(xlim=c(0,50), ylim=c(0,100))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
with(as.data.frame(o4), lines(time, P, lwd=1.5, col=gray(0.1), lty=2))
with(as.data.frame(o5), lines(time, P, lwd=1.5, col=gray(0.4), lty=2))
with(as.data.frame(o6), lines(time, P, lwd=1.5, col=gray(0.7), lty=2))
with(as.data.frame(o7), lines(time, P, lwd=1.5, col=gray(0.1), lty=3))
with(as.data.frame(o8), lines(time, P, lwd=1.5, col=gray(0.4), lty=3))
with(as.data.frame(o9), lines(time, P, lwd=1.5, col=gray(0.7), lty=3))
plot.new()
plot.window(xlim=c(0,20), ylim=c(0,200))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
with(as.data.frame(o4), lines(time, P, lwd=1.5, col=gray(0.1), lty=2))
with(as.data.frame(o5), lines(time, P, lwd=1.5, col=gray(0.4), lty=2))
with(as.data.frame(o6), lines(time, P, lwd=1.5, col=gray(0.7), lty=2))
with(as.data.frame(o7), lines(time, P, lwd=1.5, col=gray(0.1), lty=3))
with(as.data.frame(o8), lines(time, P, lwd=1.5, col=gray(0.4), lty=3))
with(as.data.frame(o9), lines(time, P, lwd=1.5, col=gray(0.7), lty=3))
plot.new()
plot.window(xlim=c(0,20), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
with(as.data.frame(o4), lines(time, P, lwd=1.5, col=gray(0.1), lty=2))
with(as.data.frame(o5), lines(time, P, lwd=1.5, col=gray(0.4), lty=2))
with(as.data.frame(o6), lines(time, P, lwd=1.5, col=gray(0.7), lty=2))
with(as.data.frame(o7), lines(time, P, lwd=1.5, col=gray(0.1), lty=3))
with(as.data.frame(o8), lines(time, P, lwd=1.5, col=gray(0.4), lty=3))
with(as.data.frame(o9), lines(time, P, lwd=1.5, col=gray(0.7), lty=3))
legend(x='topright', c("bp=2","bp=4","bp=6"), lty=c(1,2,3), bty='n')
plot.new()
plot.window(xlim=c(0,20), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
with(as.data.frame(o4), lines(time, P, lwd=1.5, col=gray(0.1), lty=2))
with(as.data.frame(o5), lines(time, P, lwd=1.5, col=gray(0.4), lty=2))
with(as.data.frame(o6), lines(time, P, lwd=1.5, col=gray(0.7), lty=2))
with(as.data.frame(o7), lines(time, P, lwd=1.5, col=gray(0.1), lty=3))
with(as.data.frame(o8), lines(time, P, lwd=1.5, col=gray(0.4), lty=3))
with(as.data.frame(o9), lines(time, P, lwd=1.5, col=gray(0.7), lty=3))
legend(x='topright', c("bp=2","bp=4","bp=6"), lty=c(1,2,3), bty='n')
params = c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=2, Kp=300, a=0.004)
o1 = lsoda(y=c(T1=500,T2=700,P=10), times=seq(0,50,0.1), within_host_model,params)
o2 = lsoda(y=c(T1=500,T2=700,P=30), times=seq(0,50,0.1), within_host_model,params)
o3 = lsoda(y=c(T1=500,T2=700,P=50), times=seq(0,50,0.1), within_host_model,params)
params["bp"] = 4
o4 = lsoda(y=c(T1=500,T2=700,P=10), times=seq(0,50,0.1), within_host_model,params)
o5 = lsoda(y=c(T1=500,T2=700,P=30), times=seq(0,50,0.1), within_host_model,params)
o6 = lsoda(y=c(T1=500,T2=700,P=50), times=seq(0,50,0.1), within_host_model,params)
params["bp"] = 6
o7 = lsoda(y=c(T1=500,T2=700,P=10), times=seq(0,50,0.1), within_host_model,params)
o8 = lsoda(y=c(T1=500,T2=700,P=30), times=seq(0,50,0.1), within_host_model,params)
o9 = lsoda(y=c(T1=500,T2=700,P=50), times=seq(0,50,0.1), within_host_model,params)
plot.new()
plot.window(xlim=c(0,20), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
with(as.data.frame(o4), lines(time, P, lwd=1.5, col=gray(0.1), lty=2))
with(as.data.frame(o5), lines(time, P, lwd=1.5, col=gray(0.4), lty=2))
with(as.data.frame(o6), lines(time, P, lwd=1.5, col=gray(0.7), lty=2))
with(as.data.frame(o7), lines(time, P, lwd=1.5, col=gray(0.1), lty=3))
with(as.data.frame(o8), lines(time, P, lwd=1.5, col=gray(0.4), lty=3))
with(as.data.frame(o9), lines(time, P, lwd=1.5, col=gray(0.7), lty=3))
legend(x='topright', c("bp=2","bp=4","bp=6"), lty=c(1,2,3), bty='n')
plot.new()
plot.window(xlim=c(0,15), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
with(as.data.frame(o4), lines(time, P, lwd=1.5, col=gray(0.1), lty=2))
with(as.data.frame(o5), lines(time, P, lwd=1.5, col=gray(0.4), lty=2))
with(as.data.frame(o6), lines(time, P, lwd=1.5, col=gray(0.7), lty=2))
with(as.data.frame(o7), lines(time, P, lwd=1.5, col=gray(0.1), lty=3))
with(as.data.frame(o8), lines(time, P, lwd=1.5, col=gray(0.4), lty=3))
with(as.data.frame(o9), lines(time, P, lwd=1.5, col=gray(0.7), lty=3))
legend(x='topright', c("bp=2","bp=4","bp=6"), lty=c(1,2,3), bty='n')
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,2e-4))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out3[[i]][[2]][,c(1,6)], col=gray(0.7))
lines(1:401, sapply(out3, function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
lapply(out1, function(o) o[[2]][401,6])
unlist(lapply(out1, function(o) o[[2]][401,6]))
unlist(lapply(out1, function(o) o[[2]][301:401,6]))
?filter
unlist(lapply(out1, function(o) o[[2]][301:401,6]))
V = unlist(lapply(out1, function(o) o[[2]][301:401,6]))
mean(V[V>0])
V
any(is.na(V))
V = unlist(lapply(out1, function(o) o[[2]][301:401,6]))
mean(V[V>0], na.rm=T)
## evolved virulence when all infections are initially acute
V = unlist(lapply(out1, function(o) o[[2]][401,6]))
mean(V[V>0], na.rm=T)
## evolved virulence when all infections are initially acute
V = unlist(lapply(out1, function(o) o[[2]][350:401,6]))
mean(V[V>0], na.rm=T)
## evolved virulence when all infections are initially acute
V = unlist(lapply(out1, function(o) o[[2]][380:401,6]))
mean(V[V>0], na.rm=T)
## evolved virulence when all infections are initially acute
V = unlist(lapply(out1, function(o) o[[2]][390:401,6]))
mean(V[V>0], na.rm=T)
## evolved virulence when all infections are initially acute
V = unlist(lapply(out1, function(o) o[[2]][401,6]))
mean(V[V>0], na.rm=T)
params = c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=8*meanV/(meanV+1e-4), Kp=300, a=0.004)
V = unlist(lapply(out1, function(o) o[[2]][401,6]))
meanV=mean(V[V>0], na.rm=T)
## realized bp = bmax*v/(v0+v), where bmax=8 and v0=1e-4
params = c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=8*meanV/(meanV+1e-4), Kp=300, a=0.004)
8*meanV/(meanV+1e-4)
params = c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=8*meanV/(meanV+1e-4), Kp=300, a=0.004)
o1 = lsoda(y=c(T1=500,T2=700,P=10), times=seq(0,50,0.1), within_host_model,params)
o2 = lsoda(y=c(T1=500,T2=700,P=30), times=seq(0,50,0.1), within_host_model,params)
o3 = lsoda(y=c(T1=500,T2=700,P=50), times=seq(0,50,0.1), within_host_model,params)
plot.new()
plot.window(xlim=c(0,15), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Parasite load")
plot.new()
plot.window(xlim=c(0,50), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Parasite load")
abline(h=0, lty=2)
plot.new()
plot.window(xlim=c(0,50), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
abline(h=0, lty=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Parasite load")
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,150))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
abline(h=0, lty=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Parasite load")
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,160))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
abline(h=0, lty=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Parasite load")
plot.new()
plot.window(xlim=c(0,20), ylim=c(0,160))
axis(1); axis(2); box('plot')
with(as.data.frame(o1), lines(time, P, lwd=1.5, col=gray(0.1)))
with(as.data.frame(o2), lines(time, P, lwd=1.5, col=gray(0.4)))
with(as.data.frame(o3), lines(time, P, lwd=1.5, col=gray(0.7)))
abline(h=0, lty=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Parasite load")
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,2e-4))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out3[[i]][[2]][,c(1,6)], col=gray(0.7))
lines(1:401, sapply(out3, function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
par(mfrow=c(1,1), mar=c(3.5,3.5,0.5,0.5), oma=rep(0,4))
plot.new()
plot.window(xlim=c(0,400), ylim=c(0,2e-4))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out4[[i]][[2]][,c(1,6)], col=gray(0.7))
lines(1:401, sapply(out4, function(o) o[[2]][,6]) %>% apply(., 1, mean), lwd=2)
mtext(side=1, line=2.5, "Time")
mtext(side=2, line=2.5, "Per-parasite virulence")
## evolved virulence when all infections are initially acute
V = unlist(lapply(out4, function(o) o[[2]][401,6]))
meanV=mean(V[V>0], na.rm=T)
meanV
params0 = c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=4, Kp=300, a=0.004)
## at evolved bp
params1 = c(S1=1000, S2=1000, s1=2000, s2=2000,
b1=0.1, b2=0.1, I12=10000, I21=10000,
m=0.9, c1=50, c2=130, C1=50, C2=50,
bp=8*meanV/(meanV+1e-4), Kp=300, a=0.004)
out0 <- lapply(1:50, function(i) {
## choose the initial dose and immune state randomly
Th2 <- runif(1,400,700);
lsoda(y=c(T1=1200-Th2,T2=Th2,P=rpois(1,round(runif(1,10,30)))), times=seq(0,50,0.1), within_host_model,params0)
})
out1 <- lapply(1:50, function(i) {
## choose the initial dose and immune state randomly
Th2 <- runif(1,400,700);
lsoda(y=c(T1=1200-Th2,T2=Th2,P=rpois(1,round(runif(1,10,30)))), times=seq(0,50,0.1), within_host_model,params1)
})
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,200))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out0[[i]][,c(1,4)])
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out0[[i]][,c(1,4)])
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out0[[i]][,c(1,4)])
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(out1[[i]][,c(1,4)])
mtext(side=1, line=1, outer=T, "Time")
mtext(side=2, line=1, outer=T, "Parasite load")
out1 <- readRDS("Nested_model_variable_dose_fixed_Th2_acute_outcome.RDS")
i = 1
o1 <- lapply(1:50, function(i) {
## choose the initial dose and immune state randomly
Th2 <- runif(1,400,700);
lsoda(y=c(T1=1200-Th2,T2=Th2,P=rpois(1,round(runif(1,10,30)))), times=seq(0,50,0.1), within_host_model,params1)
})
o1[[i]][,c(1,4)]
o1[[i]][,4]
min(o1[[i]][,4])
min(o1[[5]][,4])
min(o1[[6]][,4])
min(o1[[7]][,4])
min(o1[[8]][,4])
min(o1[[9]][,4])
min(o1[[10]][,4])
min(o1[[11]][,4])
i = 11
min(o1[[i]][,4])
which.min(o1[[i]][,4])
o1[[i]][(which.min(o1[[i]][,4])+1):nrow(o1[[i]]),]
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2, labels=FALSE); box('plot')
for (i in 1:50) {
## Throw out any where P drops below 2, as these are incredibly *unlikely* to survive to the end anyway
if(min(o1[[i]][,4]) < 2) {
o1[[i]][(which.min(o1[[i]][,4])+1):nrow(o1[[i]]),4] <- 0
}
lines(o1[[i]][,c(1,4)])
}
i
min(o1[[i]][,4]) < 2
which.min(o1[[i]][,4])
o1[[i]]
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2, labels=FALSE); box('plot')
for (i in 1:50) {
## Throw out any where P drops below 2 and then recovers, as these are incredibly *unlikely* to survive to the end anyway
if(min(o1[[i]][,4]) < 2 & max(o1[[i]][,4]) > 50) {
o1[[i]][(which.min(o1[[i]][,4])+1):nrow(o1[[i]]),4] <- 0
}
lines(o1[[i]][,c(1,4)])
}
lapply(o0, function(o) o[401,4] > 10)
o0 <- lapply(1:50, function(i) {
## choose the initial dose and immune state randomly
Th2 <- runif(1,400,700);
lsoda(y=c(T1=1200-Th2,T2=Th2,P=rpois(1,round(runif(1,10,30)))), times=seq(0,50,0.1), within_host_model,params0)
})
lapply(o0, function(o) o[401,4] > 10)
sum(lapply(o0, function(o) o[401,4] > 10))
unlist(lapply(o0, function(o) o[401,4] > 10))
sum(unlist(lapply(o0, function(o) o[401,4] > 10)))
sum(unlist(lapply(o0, function(o) o[401,4] < 1)))
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(o0[[i]][,c(1,4)])
legend(x='topright', paste0("Extinction prob = ", round(sum(unlist(lapply(o0, function(o) o[401,4] < 1)))/50,2)), bty='n')
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,260))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(o0[[i]][,c(1,4)])
legend(x='topright', paste0("Extinction prob = ", round(sum(unlist(lapply(o0, function(o) o[401,4] < 1)))/50,2)), bty='n')
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,275))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(o0[[i]][,c(1,4)])
legend(x='topright', paste0("Extinction prob = ", round(sum(unlist(lapply(o0, function(o) o[401,4] < 1)))/50,2)), bty='n')
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2, labels=FALSE); box('plot')
for (i in 1:50) {
## Throw out any where P drops below 2 and then recovers, as these are incredibly *unlikely* to survive to the end anyway
if(min(o1[[i]][,4]) < 2 & max(o1[[i]][,4]) > 50) {
o1[[i]][(which.min(o1[[i]][,4])+1):nrow(o1[[i]]),4] <- 0
}
lines(o1[[i]][,c(1,4)])
}
legend(x='topright', paste0("Extinction prob = ", round(sum(unlist(lapply(o1, function(o) o[401,4] < 1)))/50,2)), bty='n')
o0 <- lapply(1:500, function(i) {
## choose the initial dose and immune state randomly
Th2 <- runif(1,400,700);
lsoda(y=c(T1=1200-Th2,T2=Th2,P=rpois(1,round(runif(1,10,30)))), times=seq(0,50,0.1), within_host_model,params0)
})
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,275))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(o0[[i]][,c(1,4)], lwd=0.5, col=gray(0.6))
legend(x='topright', paste0("Prob. chronic = ", round(sum(unlist(lapply(o0, function(o) o[401,4] > 10)))/500,2)), bty='n')
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,275))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(o0[[i]][,c(1,4)], lwd=0.5, col=gray(0.2))
legend(x='topright', paste0("Prob. chronic = ", round(sum(unlist(lapply(o0, function(o) o[401,4] > 10)))/500,2)), bty='n')
o1 <- lapply(1:500, function(i) {
## choose the initial dose and immune state randomly
Th2 <- runif(1,400,700);
lsoda(y=c(T1=1200-Th2,T2=Th2,P=rpois(1,round(runif(1,10,30)))), times=seq(0,50,0.1), within_host_model,params1)
})
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2, labels=FALSE); box('plot')
for (i in 1:50) {
## Throw out any where P drops below 2 and then recovers, as these are incredibly *unlikely* to survive to the end anyway
if(min(o1[[i]][,4]) < 2 & max(o1[[i]][,4]) > 50) {
o1[[i]][(which.min(o1[[i]][,4])+1):nrow(o1[[i]]),4] <- 0
}
lines(o1[[i]][,c(1,4)], lwd=0.5, col=gray(0.6))
}
legend(x='topright', paste0("Prob. chronic = ", round(sum(unlist(lapply(o1, function(o) o[401,4] > 10)))/500,2)), bty='n')
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,275))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(o0[[i]][,c(1,4)], lwd=0.5, col=gray(0.2))
legend(x='topright', paste0("Prob. chronic = ", round(sum(unlist(lapply(o0, function(o) o[401,4] > 10)))/500,2)), bty='n')
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2, labels=FALSE); box('plot')
for (i in 1:50) {
## Throw out any where P drops below 2 and then recovers, as these are incredibly *unlikely* to survive to the end anyway
if(min(o1[[i]][,4]) < 2 & max(o1[[i]][,4]) > 50) {
o1[[i]][(which.min(o1[[i]][,4])+1):nrow(o1[[i]]),4] <- 0
}
lines(o1[[i]][,c(1,4)], lwd=0.5, col=gray(0.6))
}
legend(x='topright', paste0("Prob. chronic = ", round(sum(unlist(lapply(o1, function(o) o[401,4] > 10)))/500,2)), bty='n')
P <- rpois(500,round(runif(500,10,30)))
P
hist(P)
Th2 <- runif(500, 400, 700)
P <- rpois(500,round(runif(500,10,30)))
o0 <- lapply(1:500,
function(i) {
## choose the initial dose and immune state randomly
lsoda(y=c(T1=1200-Th2[i],T2=Th2[i],P=[i]), times=seq(0,50,0.1), within_host_model, params0)
Th2
P
length(Th2)
length(P)
Th2 <- runif(500, 400, 700)
P <- rpois(500,round(runif(500,10,30)))
o0 <- lapply(1:500,
function(i) {
## choose the initial dose and immune state randomly
lsoda(y=c(T1=1200-Th2[i],T2=Th2[i],P=P[i]), times=seq(0,50,0.1), within_host_model, params0)
}
)
o0 <- lapply(1:500,
function(i) {
## choose the initial dose and immune state randomly
lsoda(y=c(T1=1200-Th2[i],T2=Th2[i],P=P[i]), times=seq(0,50,0.1), within_host_model, params0)
}
)
o1 <- lapply(1:500,
function(i) {
## choose the initial dose and immune state randomly
lsoda(y=c(T1=1200-Th2[i],T2=Th2[i],P=P[i]), times=seq(0,50,0.1), within_host_model, params1)
}
)
par(mfrow=c(1,2), mar=c(1.5,1.5,0.5,0.5), oma=c(2,2,0,0))
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,275))
axis(1); axis(2); box('plot')
for (i in 1:50) lines(o0[[i]][,c(1,4)], lwd=0.5, col=gray(0.2))
legend(x='topright', paste0("Prob. chronic = ", round(sum(unlist(lapply(o0, function(o) o[401,4] > 10)))/500,2)), bty='n')
plot.new()
plot.window(xlim=c(0,30), ylim=c(0,250))
axis(1); axis(2, labels=FALSE); box('plot')
for (i in 1:50) {
## Throw out any where P drops below 2 and then recovers, as these are incredibly *unlikely* to survive to the end anyway
if(min(o1[[i]][,4]) < 2 & max(o1[[i]][,4]) > 50) {
o1[[i]][(which.min(o1[[i]][,4])+1):nrow(o1[[i]]),4] <- 0
}
lines(o1[[i]][,c(1,4)], lwd=0.5, col=gray(0.6))
}
legend(x='topright', paste0("Prob. chronic = ", round(sum(unlist(lapply(o1, function(o) o[401,4] > 10)))/500,2)), bty='n')
mtext(side=1, line=1, outer=T, "Time")
mtext(side=2, line=1, outer=T, "Parasite load")
88*10+36*45
(88*10+36*45)/60
5*90*3+3*45*33+88*10
(5*90*3+3*45*33+88*10)/60
lapply(out1, function(o) o[401,6])
lapply(out1, function(o) o[[2]][401,6])
unlist(lapply(out1, function(o) o[[2]][401,6]))
unlist(lapply(out1, function(o) o[[2]][401,6]))>0
which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0)
sapply(which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0), function(i) out1[[i]][[2]][401,6])
data.frame(v=sapply(which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0), function(i) out1[[i]][[2]][401,6]),
case="Acute")
data.frame(v=sapply(which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0), function(i) out1[[i]][[2]][401,6]),
+            case="Acute")
unlist(lapply(out2, function(o) o[[2]][401,6]))
data.frame(v=c(unlist(lapply(out2, function(o) o[[2]][401,6])),
unlist(lapply(out3, function(o) o[[2]][401,6])),
unlist(lapply(out4, function(o) o[[2]][401,6])),
sapply(which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0), function(i) out1[[i]][[2]][401,6])),
case=c(rep("Naive",50),
rep("Th1-biased",50),
rep("Variable",50),
rep("Th2-biased", sum(unlist(lapply(out1, function(o) o[[2]][401,6]))>0))))
vcomp
data.frame(v=c(unlist(lapply(out2, function(o) o[[2]][401,6])),
unlist(lapply(out3, function(o) o[[2]][401,6])),
unlist(lapply(out4, function(o) o[[2]][401,6])),
sapply(which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0), function(i) out1[[i]][[2]][401,6])),
case=c(rep("Naive",50),
rep("Th1-biased",50),
rep("Variable",50),
rep("Th2-biased", sum(unlist(lapply(out1, function(o) o[[2]][401,6]))>0)))) -> vcomp
vcomp
boxplot(vcomp)
?boxplot
boxplot(v~case, data=vcomp)
boxplot(log10(v)~case, data=vcomp)
∫
boxplot(log10(v)~case, data=vcomp)
data.frame(v=c(unlist(lapply(out2, function(o) o[[2]][401,6])),
unlist(lapply(out3, function(o) o[[2]][401,6])),
unlist(lapply(out4, function(o) o[[2]][401,6])),
sapply(which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0), function(i) out1[[i]][[2]][401,6])),
case=c(rep("Naive",50),
rep("Th1-\nbiased",50),
rep("Variable",50),
rep("Th2-\nbiased", sum(unlist(lapply(out1, function(o) o[[2]][401,6]))>0)))) -> vcomp
boxplot(log10(v)~case, data=vcomp)
boxplot(log10(v)~case, data=vcomp, xlab="")
boxplot((v*1000)~case, data=vcomp, xlab="")
boxplot(log10(v)~case, data=vcomp, xlab="")
filter(vcomp, case=="Th2-biased")
filter(vcomp, case="Th2-biased")
subset(vcomp, case=="Th2-biased")
subset(vcomp, case=="Th2-biased")
data.frame(v=c(unlist(lapply(out2, function(o) o[[2]][401,6])),
unlist(lapply(out3, function(o) o[[2]][401,6])),
unlist(lapply(out4, function(o) o[[2]][401,6])),
sapply(which(unlist(lapply(out1, function(o) o[[2]][401,6]))>0), function(i) out1[[i]][[2]][401,6])),
case=c(rep("Naive",50),
rep("Th1-biased",50),
rep("Variable",50),
rep("Th2-biased", sum(unlist(lapply(out1, function(o) o[[2]][401,6]))>0)))) -> vcomp
filter(vcomp, case=="Th2-biased")
filter(vcomp, case=="Th2-biased")$v
mean(filter(vcomp, case=="Th2-biased")$v)
mean(filter(vcomp, case=="Th2-biased")$v)/mean(filter(vcomp, case=="Naive")$v)
out5 <- readRDS("Nested_model_variable_dose_variable_Th2_variable_outcome_2.RDS")
lapply(out5, function(o) o[[2]][401,4])
